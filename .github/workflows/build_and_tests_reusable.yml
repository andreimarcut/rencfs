on:
  workflow_call:
    inputs:
      upload_artifacts:
        description: 'If we should upload artifacts'
        type: boolean
        required: true
      version:
        description: 'The current value in version file (type: string)'
        type: string
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fmt check
        run: cargo fmt --all --check
      
      - name: Check
        run: cargo check --all
      
      - name: Tests
        run: cargo test --all
    
  aur_build:
    name: Build AUR
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install latest Rust nightly
        run: rustup default nightly && rustup update
      
      - name: Install cargo-aur
        run: cargo install cargo-aur

      - name: Run cargo aur
        run: cargo aur
      
      - name: Check for publish
        run: cargo publish --dry-run --allow-dirty

      - name: Upload PKGBUILD artifact
        if: ${{ inputs.upload_artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: PKGBUILD
          path: ./target/cargo-aur/PKGBUILD

      - name: Upload ${{ github.event.repository.name }}-${{ inputs.version }}-x86_64.tar.gz artifact
        if: ${{ inputs.upload_artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ inputs.version }}-x86_64.tar.gz
          path: ./target/cargo-aur/${{ github.event.repository.name }}-${{ inputs.version }}-x86_64.tar.gz

  docker:
    name: Build Docker
    needs: [tests]
    uses: radumarias/rencfs/.github/workflows/docker_reusable.yml@main
    with:
      push: ${{ inputs.upload_artifacts }}
      version: ${{ inputs.version }}
    secrets: inherit
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write